module Module_detect_FSM (w, clk, y);
    input w, clk;
    output y;
    reg [2:0] state, next_state;
    
    parameter S0 = 3'b000, S1 = 3'b011, S2 = 3'b010, S3 = 3'b011;
    parameter S4 = 3'b100; 
    
    always @(posedge clk)
        state <= next_state;
    
    always @(state or w)
        case (state)
            S0: next_state = w ? S1 : S0;
            S1: next_state = w ? S2 : S0;
            S2: next_state = w ? S3 : S0;
            S3: next_state = w ? S4 : S0;
	    S4: next_state = w ? S4 : S0;
            default: next_state = S0;
        endcase
    
    assign y = (state == S4);
endmodule
